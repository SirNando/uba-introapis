openapi: 3.0.0
info:
  description: |
    API de la Heladería Via Apilia. A través de esta API se pueden consultar
    los gustos de helado y realizar pedidos.
  version: "1.0.0"
  title: Heladería Via Apilia
  contact:
    email: devs@heladeria-apilia.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: "https://api.heladeria-apilia.com"
paths:
  /gustos:
    get:
      description: Listar los gustos de helado
      parameters:
        - in: query
          name: tipo
          required: false
          schema:
            $ref: "#/components/schemas/TipoDeGusto"
      responses:
        "200":
          description: Estos son los gustos de helado
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Gusto"
  /gustos/{gustoId}:
    get:
      description: Ver un gusto particular
      parameters:
        - $ref: "#/components/parameters/gustoId"
      responses:
        "200":
          description: El gusto seleccionado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Gusto"
        "404":
          description: No se conoce un gusto con tal id
  /pedidos:
    post:
      description: Crear un nuevo pedido a la dirección indicada
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                direccion_entrega:
                  type: string
                  description: dirección en la que se ha de entregar este pedido
              required: [direccion_entrega]
      responses:
        "201":
          description: El pedido ha sido creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pedido"
  /pedidos/{pedidoId}:
    get:
      description: Ver un pedido particular
      parameters:
        - $ref: "#/components/parameters/pedidoId"
      responses:
        "200":
          description: El pedido ha sido hallado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pedido"
        "404":
          description: No se conoce un pedido con tal id
    put:
      description: Cambiar los datos de un pedido particular
      parameters:
        - $ref: "#/components/parameters/pedidoId"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                direccion_entrega:
                  type: string
                  description: dirección en la que se ha de entregar este pedido
              required: [direccion_entrega]
      responses:
        "200":
          description: El pedido ha sido actualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pedido"
        "404":
          description: No se conoce un pedido con tal id
  /pedidos/{pedidoId}/potes:
    get:
      description: Lista los potes que componen un pedido
      parameters:
        - $ref: "#/components/parameters/pedidoId"
      responses:
        "200":
          description: Los potes del pedido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pote"
        "404":
          description: No se conoce un pedido con tal id
    post:
      description: Agrega un pote a un pedido
      parameters:
        - $ref: "#/components/parameters/pedidoId"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                peso:
                  $ref: "#/components/schemas/PesoDePote"
                gustos:
                  type: array
                  items:
                    type: string
                  description: los gustos de helado en este pote
                  example: [ddl, pist]
              required: [peso, gustos]
      responses:
        "201":
          description: El pote fue agregado al pedido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pote"
        "404":
          description: No se conoce un pedido con tal id
  /pedidos/{pedidoId}/potes/{poteId}:
    delete:
      description: quitar un pote de un pedido
      parameters:
        - $ref: "#/components/parameters/pedidoId"
        - $ref: "#/components/parameters/poteId"
      responses:
        "204":
          description: El pote fue quitado del pedido
        "404":
          description: No se conoce un pedido y/o pote con tal id
  /pedidos/{pedidoId}/pagar:
    post:
      description: Inicia el pago del pedido
      parameters:
        - $ref: "#/components/parameters/pedidoId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatosDePago"
      responses:
        "202":
          description: Los datos de pago han sido recibidos y serán procesados
        "404":
          description: No se conoce un pedido con tal id
  /pedidos/{pedidoId}/pago:
    get:
      description: Ver el estado del pago de un pedido particular
      parameters:
        - $ref: "#/components/parameters/pedidoId"
      responses:
        "200":
          description: Este es el estado del pago del pedido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pago"
        "404":
          description: No se conoce un pedido con tal id
  /pedidos/{pedidoId}/repartidor:
    put:
      description: Asignar un repartidor a un pedido
      parameters:
        - $ref: "#/components/parameters/pedidoId"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: id del repartidor a asignar
                  example: 13
              required: [id]
      responses:
        "200":
          description: El repartidor fue asignado al pedido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pedido"
        "404":
          description: No se conoce un pedido con tal id o el repartidor no existe
  /pedidos/{pedidoId}/repartidor/{repartidorId}:
    delete:
      description: Quitar un repartidor de un pedido
      parameters:
        - $ref: "#/components/parameters/pedidoId"
        - $ref: "#/components/parameters/repartidorId"
      responses:
        "200":
          description: El repartidor fue quitado del pedido
        "404":
          description: No se conoce un pedido o repartidor con tal id
  /repartidores:
    get:
      description: Listar los repartidores
      parameters:
        - in: query
          name: edadMin
          required: false
          schema:
            type: number
            description: Edad mínima de filtrado
            example: 30
        - in: query
          name: edadMax
          required: false
          schema:
            type: number
            description: Edad máxima de filtrado
            example: 40
      responses:
        "200":
          description: Estos son los repartidores con los filtros aplicados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Repartidor"
    post:
      description: Crear un nuevo repartidor con los datos indicados
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: nombre del repartidor
                apellido:
                  type: string
                  description: apellido del repartidor
                cuil:
                  type: integer
                  description: CUIL del repartidor
                  example: 20123456789
                edad:
                  type: integer
                  description: Edad del repartidor
                  example: 30
              required: [nombre, apellido, cuil, edad]
      responses:
        "201":
          description: El repartidor ha sido creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Repartidor"
  /repartidores/{repartidorId}:
    get:
      description: Ver un repartidor particular
      parameters:
        - $ref: "#/components/parameters/repartidorId"
      responses:
        "200":
          description: El repartidor ha sido hallado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Repartidor"
        "404":
          description: No se conoce un repartidor con tal id
    put:
      description: Cambiar los datos de un repartidor particular
      parameters:
        - $ref: "#/components/parameters/repartidorId"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: nombre del repartidor
                apellido:
                  type: string
                  description: apellido del repartidor
                cuil:
                  type: number
                  description: CUIL del repartidor
                edad:
                  type: number
                  description: edad del repartidor
              required: [nombre, apellido, cuil, edad]
      responses:
        "200":
          description: Los datos del repartidor han sido cambiados
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Repartidor"
        "404":
          description: No se conoce un repartidor con tal id
    delete:
      description: Eliminar un repartidor
      parameters:
        - $ref: "#/components/parameters/repartidorId"
      responses:
        "204":
          description: El repartidor ha sido eliminado
        "404":
          description: No se conoce un repartidor con tal id
  /vehiculos/{repartidorId}:
    get:
      description: Listar los vehículos de un repartidor
      parameters:
        - $ref: "#/components/parameters/repartidorId"
      responses:
        "200":
          description: Estos son los vehículos del repartidor
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vehiculo"
        "404":
          description: No se conoce un repartidor con tal id
    post:
      description: Agregar un vehículo
      parameters:
        - $ref: "#/components/parameters/repartidorId"
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/VehiculoPatentado"
                - $ref: "#/components/schemas/Bicicleta"
      responses:
        "201":
          description: El vehículo fue agregado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehiculo"
        "400":
          description: Estructura de vehiculo invalida
  /vehiculos/{repartidorId}/{vehiculoId}:
    put:
      description: Cambiar los datos de un vehículo
      parameters:
        - $ref: "#/components/parameters/repartidorId"
        - $ref: "#/components/parameters/vehiculoId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vehiculo"
      responses:
        "200":
          description: Los datos del vehículo han sido cambiados
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehiculo"
        "400":
          description: Estructura de vehiculo invalida
        "404":
          description: No se conoce un repartidor o vehiculo con tal id asignado al repartidor

    delete:
      description: Eliminar un vehículo
      parameters:
        - $ref: "#/components/parameters/repartidorId"
        - $ref: "#/components/parameters/vehiculoId"
      responses:
        "204":
          description: El repartidor ya no posee este vehiculo
        "404":
          description: No se conoce un repartidor o vehiculo con tal id asignado al repartidor

components:
  parameters:
    gustoId:
      name: gustoId
      in: path
      description: id del gusto
      required: true
      schema:
        type: string
    pedidoId:
      name: pedidoId
      in: path
      description: id del pedido
      required: true
      schema:
        type: integer
    poteId:
      name: poteId
      in: path
      description: id del pote
      required: true
      schema:
        type: integer
    repartidorId:
      name: repartidorId
      in: path
      description: id del repartidor
      required: true
      schema:
        type: integer
    vehiculoId:
      name: vehiculoId
      in: path
      description: id del vehiculo
      required: true
      schema:
        type: integer
  schemas:
    TipoDeGusto:
      description: categoría de gustos de helado
      type: string
      enum:
        - chocolates
        - dulce de leches
        - cremas
        - frutas
      example: dulce de leches
    Gusto:
      description: un gusto de helado
      type: object
      properties:
        id:
          type: string
          description: nombre corto que identifica este gusto
          example: ddl
        nombre:
          type: string
          description: nombre legible por humanos para este gusto
          example: Dulce de leche
        tipo:
          $ref: "#/components/schemas/TipoDeGusto"
      required: [id, nombre, tipo]
    Pedido:
      description: un pedido de helados
      type: object
      properties:
        id:
          type: integer
          description: identificador de este pedido
          example: 22
        direccion_entrega:
          type: string
          description: dirección en la que se ha de entregar este pedido
          example: Lavalleja 244 4C, CABA
        _links:
          type: object
          description: hypermedia links de un pedido
          properties:
            potes:
              $ref: "#/components/schemas/Link"
            pagar:
              $ref: "#/components/schemas/Link"
            pago:
              $ref: "#/components/schemas/Link"
            repartidor:
              $ref: "#/components/schemas/Link"
      required: [id, direccion_entrega]
    PesoDePote:
      description: peso de un pote de helado en gramos
      type: string
      enum:
        - "1000"
        - "500"
        - "250"
      example: "500"
    Pote:
      description: un pote de helado dentro de un pedido
      type: object
      properties:
        id:
          type: integer
          description: identificador de este pote dentro del pedido
          example: 1
        peso:
          $ref: "#/components/schemas/PesoDePote"
        gustos:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: el id del gusto de helado en este pote
                example: ddl
              _links:
                type: object
                description: hypermedia links de un gusto dentro de un pote
                properties:
                  self:
                    $ref: "#/components/schemas/Link"
          description: los gustos de helado en este pote
        _links:
          type: object
          description: hypermedia links de un pote
          properties:
            pedido:
              $ref: "#/components/schemas/Link"
            borrar:
              $ref: "#/components/schemas/Link"
      required: [id, peso, gustos]
    DatosDePago:
      description: los datos necesarios para iniciar el pago de un pedido
      type: object
      discriminator:
        propertyName: tipoDePago
      properties:
        tipoDePago:
          type: string
          description: se usa para determinar el tipo de pago a usar
      required: [tipoDePago]
    DatosDePagoBilleteraVirtual:
      description: datos de pago cuando se usa una billetera virtual
      allOf:
        - $ref: "#/components/schemas/DatosDePago"
        - type: object
          properties:
            alias:
              type: string
              description: nombre de usuario o alias de la billetera a utilizar
              example: mi.cuenta.billetera
          required: [alias]
    DatosDePagoTarjeta:
      description: datos de pago cuando se usa tarjeta de crédito
      allOf:
        - $ref: "#/components/schemas/DatosDePago"
        - type: object
          properties:
            numerosTarjeta:
              type: string
              description: los 15 o 16 números de la tarjeta de crédito
              example: "1234567812345678"
            vencimientoTarjetaMes:
              type: number
              format: int8
              minimum: 1
              maximum: 6
              description: el mes del vencimiento de la tarjeta de crédito
              example: 4
            vencimientoTarjetaAnio:
              type: number
              format: int8
              minimum: 0
              maximum: 99
              description: el año de vencimiento de la tarjeta expresado en dos dígitos
              example: 24
          required:
            [numerosTarjeta, vencimientoTarjetaMes, vencimientoTarjetaAnio]
    Pago:
      description: estado del pago de un pedido
      type: object
      properties:
        status:
          type: string
          enum:
            - pendiente de pago
            - pago en proceso
            - pago aceptado
            - pago fallado
          example: pago aceptado
      required: [status]
    Link:
      description: un link usado para hypermedia
      type: object
      properties:
        href:
          type: string
          format: uri
          description: la URI del link
          example: "http://foo.com/bar"
        verb:
          type: string
          enum:
            - GET
            - POST
            - PUT
            - PATCH
            - DELETE
          example: GET
          description: el verbo a usar en el link
    Repartidor:
      description: un repartidor de helados
      type: object
      properties:
        id:
          type: integer
          description: id del repartidor
          example: 13
        nombre:
          type: string
          description: nombre del repartidor
          example: "Carlos"
        apellido:
          type: string
          description: apellido del repartidor
          example: "Gonzalez"
        cuil:
          type: integer
          description: CUIL del repartidor
          example: "27123456789"
        edad:
          type: integer
          description: edad del repartidor
          example: 30
        _links:
          type: object
          description: hypermedia links de un repartidor
          properties:
            vehiculos:
              $ref: "#/components/schemas/Link"
      required: [nombre, apellido, cuil, edad]
    Vehiculo:
      description: vehiculo con id, puede ser bicicleta o auto/moto
      type: object
      properties:
        id:
          type: integer
          description: id del vehiculo
          example: 13
        schema:
          oneOf:
            - $ref: "#/components/schemas/Bicicleta"
            - $ref: "#/components/schemas/VehiculoPatentado"
      required: [id]
    VehiculoPatentado:
      description: vehículo patentado (auto o moto) de repartidor
      type: object
      properties:
        tipo:
          type: string
          enum:
            - moto
            - auto
          description: tipo del vehiculo
        patente:
          type: string
          description: patente del vehiculo
          example: "ABC123"
      required: [tipo, patente]
    Bicicleta:
      description: bicicleta de repartidor
      type: object
      properties:
        rodado:
          type: integer
          description: rodado de la bicicleta
          example: 26
      required: [rodado]
